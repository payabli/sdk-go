// Code generated by Fern. DO NOT EDIT.

package export

import (
	context "context"
	sdkgo "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Export a list of boarding applications for an organization. Use filters to limit results.
func (c *Client) ExportApplications(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportApplicationsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportApplications(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) ExportBatchDetails(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportBatchDetailsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatchDetails(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) ExportBatchDetailsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportBatchDetailsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatchDetailsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of batches for an entrypoint. Use filters to limit results.
func (c *Client) ExportBatches(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportBatchesRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatches(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of batches for an organization. Use filters to limit results.
func (c *Client) ExportBatchesOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportBatchesOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatchesOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of money out batches for a paypoint. Use filters to limit results.
func (c *Client) ExportBatchesOut(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportBatchesOutRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatchesOut(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of money out batches for an organization. Use filters to limit results.
func (c *Client) ExportBatchesOutOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportBatchesOutOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBatchesOutOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of bills for an entrypoint. Use filters to limit results.
func (c *Client) ExportBills(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportBillsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBills(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of bills for an organization. Use filters to limit results.
func (c *Client) ExportBillsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportBillsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportBillsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of chargebacks and ACH returns for an entrypoint. Use filters to limit results.
func (c *Client) ExportChargebacks(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportChargebacksRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportChargebacks(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of chargebacks and ACH returns for an organization. Use filters to limit results.
func (c *Client) ExportChargebacksOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportChargebacksOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportChargebacksOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of customers for an entrypoint. Use filters to limit results.
func (c *Client) ExportCustomers(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportCustomersRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportCustomers(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Exports a list of customers for an organization. Use filters to limit results.
func (c *Client) ExportCustomersOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportCustomersOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportCustomersOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export list of invoices for an entrypoint. Use filters to limit results.
func (c *Client) ExportInvoices(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportInvoicesRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportInvoices(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of invoices for an organization. Use filters to limit results.
func (c *Client) ExportInvoicesOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportInvoicesOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportInvoicesOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of child organizations (suborganizations) for a parent organization.
func (c *Client) ExportOrganizations(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportOrganizationsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportOrganizations(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of payouts and their statuses for an entrypoint. Use filters to limit results.
func (c *Client) ExportPayout(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportPayoutRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportPayout(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of payouts and their details for an organization. Use filters to limit results.
func (c *Client) ExportPayoutOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportPayoutOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportPayoutOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of paypoints in an organization. Use filters to limit results.
func (c *Client) ExportPaypoints(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportPaypointsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportPaypoints(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of settled transactions for an entrypoint. Use filters to limit results.
func (c *Client) ExportSettlements(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportSettlementsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportSettlements(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of settled transactions for an organization. Use filters to limit results.
func (c *Client) ExportSettlementsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportSettlementsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportSettlementsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of subscriptions for an entrypoint. Use filters to limit results.
func (c *Client) ExportSubscriptions(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportSubscriptionsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportSubscriptions(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of subscriptions for an organization. Use filters to limit results.
func (c *Client) ExportSubscriptionsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportSubscriptionsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportSubscriptionsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of transactions for an entrypoint in a file in XLXS or CSV format. Use filters to limit results. If you don't specify a date range in the request, the last two months of data are returned.
func (c *Client) ExportTransactions(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportTransactionsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportTransactions(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of transactions for an org in a file in XLSX or CSV format. Use filters to limit results. If you don't specify a date range in the request, the last two months of data are returned.
func (c *Client) ExportTransactionsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportTransactionsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportTransactionsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of transfer details for an entrypoint. Use filters to limit results.
func (c *Client) ExportTransferDetails(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// Transfer identifier.
	transferId int64,
	request *sdkgo.ExportTransferDetailsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportTransferDetails(
		ctx,
		entry,
		format,
		transferId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get a list of transfers for an entrypoint. Use filters to limit results.
func (c *Client) ExportTransfers(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdkgo.ExportTransfersRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportTransfers(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of vendors for an entrypoint. Use filters to limit results.
func (c *Client) ExportVendors(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	request *sdkgo.ExportVendorsRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportVendors(
		ctx,
		entry,
		format,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Export a list of vendors for an organization. Use filters to limit results.
func (c *Client) ExportVendorsOrg(
	ctx context.Context,
	// Format for the export, either XLSX or CSV.
	format *sdkgo.ExportFormat1,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdkgo.ExportVendorsOrgRequest,
	opts ...option.RequestOption,
) (sdkgo.File, error) {
	response, err := c.WithRawResponse.ExportVendorsOrg(
		ctx,
		format,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
