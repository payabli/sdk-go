// Code generated by Fern. DO NOT EDIT.

package boarding

import (
	context "context"
	sdk "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Creates a boarding application in an organization. This endpoint requires an application API token.
func (c *Client) AddApplication(
	ctx context.Context,
	request *sdk.AddApplicationRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.AddApplication(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Deletes a boarding application by ID.
func (c *Client) DeleteApplication(
	ctx context.Context,
	// Boarding application ID.
	appId int,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.DeleteApplication(
		ctx,
		appId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves the details for a boarding application by ID.
func (c *Client) GetApplication(
	ctx context.Context,
	// Boarding application ID.
	appId int,
	opts ...option.RequestOption,
) (*sdk.ApplicationDetailsRecord, error) {
	response, err := c.WithRawResponse.GetApplication(
		ctx,
		appId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Gets a boarding application by authentication information. This endpoint requires an `application` API token.
func (c *Client) GetApplicationByAuth(
	ctx context.Context,
	// The application ID in Hex format. Find this at the end of the boarding link URL returned in a call to api/Boarding/applink/{appId}/{mail2}. For example in:  `https://boarding-sandbox.payabli.com/boarding/externalapp/load/17E`, the xId is `17E`.
	xId string,
	request *sdk.RequestAppByAuth,
	opts ...option.RequestOption,
) (*sdk.ApplicationQueryRecord, error) {
	response, err := c.WithRawResponse.GetApplicationByAuth(
		ctx,
		xId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves details for a boarding link, by ID.
func (c *Client) GetByIdLinkApplication(
	ctx context.Context,
	// The boarding link ID. You can find this at the end of the boarding link reference name. For example `https://boarding.payabli.com/boarding/app/myorgaccountname-00091`. The ID is `91`.
	boardingLinkId int,
	opts ...option.RequestOption,
) (*sdk.BoardingLinkQueryRecord, error) {
	response, err := c.WithRawResponse.GetByIdLinkApplication(
		ctx,
		boardingLinkId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get details for a boarding link using the boarding template ID. This endpoint requires an application API token.
func (c *Client) GetByTemplateIdLinkApplication(
	ctx context.Context,
	// The boarding template ID. You can find this at the end of the boarding template URL in PartnerHub. Example: `https://partner-sandbox.payabli.com/myorganization/boarding/edittemplate/80`. Here, the template ID is `80`.
	templateId float64,
	opts ...option.RequestOption,
) (*sdk.BoardingLinkQueryRecord, error) {
	response, err := c.WithRawResponse.GetByTemplateIdLinkApplication(
		ctx,
		templateId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a link and the verification code used to log into an existing boarding application. You can also use this endpoint to send a link and referenceId for an existing boarding application to an email address. The recipient can use the referenceId and email address to access and edit the application.
func (c *Client) GetExternalApplication(
	ctx context.Context,
	// Boarding application ID.
	appId int,
	// Email address used to access the application. If `sendEmail` parameter is true, a link to the application is sent to this email address.
	mail2 string,
	request *sdk.GetExternalApplicationRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00, error) {
	response, err := c.WithRawResponse.GetExternalApplication(
		ctx,
		appId,
		mail2,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves the details for a boarding link, by reference name. This endpoint requires an application API token.
func (c *Client) GetLinkApplication(
	ctx context.Context,
	// The boarding link reference name. You can find this at the end of the boarding link URL. For example `https://boarding.payabli.com/boarding/app/myorgaccountname-00091`
	boardingLinkReference string,
	opts ...option.RequestOption,
) (*sdk.BoardingLinkQueryRecord, error) {
	response, err := c.WithRawResponse.GetLinkApplication(
		ctx,
		boardingLinkReference,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of boarding applications for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListApplications(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListApplicationsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBoardingAppsListResponse, error) {
	response, err := c.WithRawResponse.ListApplications(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Return a list of boarding links for an organization. Use filters to limit results.
func (c *Client) ListBoardingLinks(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListBoardingLinksRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBoardingLinksResponse, error) {
	response, err := c.WithRawResponse.ListBoardingLinks(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates a boarding application by ID. This endpoint requires an application API token.
func (c *Client) UpdateApplication(
	ctx context.Context,
	// Boarding application ID.
	appId int,
	request *sdk.ApplicationData,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.UpdateApplication(
		ctx,
		appId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
