// Code generated by Fern. DO NOT EDIT.

package organization

import (
	context "context"
	http "net/http"
	sdk "sdk"
	core "sdk/core"
	internal "sdk/internal"
	option "sdk/option"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Creates an organization under a parent organization. This is also referred to as a suborganization.
func (c *Client) AddOrganization(
	ctx context.Context,
	request *sdk.AddOrganizationRequest,
	opts ...option.RequestOption,
) (*sdk.AddOrganizationResponse, error) {
	response, err := c.WithRawResponse.AddOrganization(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Delete an organization by ID.
func (c *Client) DeleteOrganization(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	opts ...option.RequestOption,
) (*sdk.DeleteOrganizationResponse, error) {
	response, err := c.WithRawResponse.DeleteOrganization(
		ctx,
		orgId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates an organization's details by ID.
func (c *Client) EditOrganization(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.OrganizationData,
	opts ...option.RequestOption,
) (*sdk.EditOrganizationResponse, error) {
	response, err := c.WithRawResponse.EditOrganization(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Gets an organization's basic information by entry name (entrypoint identifier).
func (c *Client) GetBasicOrganization(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	opts ...option.RequestOption,
) (*sdk.OrganizationQueryRecord, error) {
	response, err := c.WithRawResponse.GetBasicOrganization(
		ctx,
		entry,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Gets an organizations basic details by org ID.
func (c *Client) GetBasicOrganizationById(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	opts ...option.RequestOption,
) (*sdk.OrganizationQueryRecord, error) {
	response, err := c.WithRawResponse.GetBasicOrganizationById(
		ctx,
		orgId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves details for an organization by ID.
func (c *Client) GetOrganization(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	opts ...option.RequestOption,
) (*sdk.OrganizationQueryRecord, error) {
	response, err := c.WithRawResponse.GetOrganization(
		ctx,
		orgId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves an organization's settings.
func (c *Client) GetSettingsOrganization(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	opts ...option.RequestOption,
) (*sdk.SettingsQueryRecord, error) {
	response, err := c.WithRawResponse.GetSettingsOrganization(
		ctx,
		orgId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
