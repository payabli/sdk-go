// Code generated by Fern. DO NOT EDIT.

package cloud

import (
	context "context"
	sdkgo "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Register a cloud device to an entrypoint. See [Devices Quickstart](/developers/developer-guides/devices-quickstart#devices-quickstart) for a complete guide.
func (c *Client) AddDevice(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdkgo.DeviceEntry,
	opts ...option.RequestOption,
) (*sdkgo.AddDeviceResponse, error) {
	response, err := c.WithRawResponse.AddDevice(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve the registration history for a device.
func (c *Client) HistoryDevice(
	ctx context.Context,
	// ID of the cloud device.
	deviceId string,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	opts ...option.RequestOption,
) (*sdkgo.CloudQueryApiResponse, error) {
	response, err := c.WithRawResponse.HistoryDevice(
		ctx,
		deviceId,
		entry,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get a list of cloud devices registered to an entrypoint.
func (c *Client) ListDevice(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdkgo.ListDeviceRequest,
	opts ...option.RequestOption,
) (*sdkgo.CloudQueryApiResponse, error) {
	response, err := c.WithRawResponse.ListDevice(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Remove a cloud device from an entrypoint.
func (c *Client) RemoveDevice(
	ctx context.Context,
	// ID of the cloud device.
	deviceId string,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	opts ...option.RequestOption,
) (*sdkgo.RemoveDeviceResponse, error) {
	response, err := c.WithRawResponse.RemoveDevice(
		ctx,
		deviceId,
		entry,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
