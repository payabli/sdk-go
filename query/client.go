// Code generated by Fern. DO NOT EDIT.

package query

import (
	context "context"
	sdk "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Retrieve a list of batches and their details, including settled and
// unsettled transactions for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatchDetails(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListBatchDetailsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBatchesDetailResponse, error) {
	response, err := c.WithRawResponse.ListBatchDetails(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of batches and their details, including settled and unsettled transactions for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatchDetailsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListBatchDetailsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseSettlements, error) {
	response, err := c.WithRawResponse.ListBatchDetailsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of batches for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatches(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListBatchesRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBatchesResponse, error) {
	response, err := c.WithRawResponse.ListBatches(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of batches for an org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatchesOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListBatchesOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBatchesResponse, error) {
	response, err := c.WithRawResponse.ListBatchesOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of MoneyOut batches for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatchesOut(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListBatchesOutRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBatchesOutResponse, error) {
	response, err := c.WithRawResponse.ListBatchesOut(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of MoneyOut batches for an org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBatchesOutOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListBatchesOutOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryBatchesOutResponse, error) {
	response, err := c.WithRawResponse.ListBatchesOutOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of chargebacks and returned transactions for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListChargebacks(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListChargebacksRequest,
	opts ...option.RequestOption,
) (*sdk.QueryChargebacksResponse, error) {
	response, err := c.WithRawResponse.ListChargebacks(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of chargebacks and returned transactions for an org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListChargebacksOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListChargebacksOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryChargebacksResponse, error) {
	response, err := c.WithRawResponse.ListChargebacksOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of customers for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListCustomers(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListCustomersRequest,
	opts ...option.RequestOption,
) (*sdk.QueryCustomerResponse, error) {
	response, err := c.WithRawResponse.ListCustomers(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of customers for an org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListCustomersOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListCustomersOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryCustomerResponse, error) {
	response, err := c.WithRawResponse.ListCustomersOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of all reports generated in the last 60 days for a single entrypoint. Use filters to limit results.
func (c *Client) ListNotificationReports(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListNotificationReportsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseNotificationReports, error) {
	response, err := c.WithRawResponse.ListNotificationReports(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of all reports generated in the last 60 days for an organization. Use filters to limit results.
func (c *Client) ListNotificationReportsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListNotificationReportsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseNotificationReports, error) {
	response, err := c.WithRawResponse.ListNotificationReportsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of notifications for an entrypoint. Use filters to limit results.
func (c *Client) ListNotifications(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListNotificationsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseNotifications, error) {
	response, err := c.WithRawResponse.ListNotifications(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Return a list of notifications for an organization. Use filters to limit results.
func (c *Client) ListNotificationsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListNotificationsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseNotifications, error) {
	response, err := c.WithRawResponse.ListNotificationsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of an organization's suborganizations and their full details such as orgId, users, and settings. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListOrganizations(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListOrganizationsRequest,
	opts ...option.RequestOption,
) (*sdk.ListOrganizationsResponse, error) {
	response, err := c.WithRawResponse.ListOrganizations(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of money out transactions (payouts) for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListPayout(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListPayoutRequest,
	opts ...option.RequestOption,
) (*sdk.QueryPayoutTransaction, error) {
	response, err := c.WithRawResponse.ListPayout(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a list of money out transactions (payouts) for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListPayoutOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListPayoutOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryPayoutTransaction, error) {
	response, err := c.WithRawResponse.ListPayoutOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of paypoints in an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListPaypoints(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListPaypointsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryEntrypointResponse, error) {
	response, err := c.WithRawResponse.ListPaypoints(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of settled transactions for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListSettlements(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListSettlementsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseSettlements, error) {
	response, err := c.WithRawResponse.ListSettlements(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of settled transactions for an organization. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListSettlementsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListSettlementsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseSettlements, error) {
	response, err := c.WithRawResponse.ListSettlementsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of subscriptions for a single paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListSubscriptions(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListSubscriptionsRequest,
	opts ...option.RequestOption,
) (*sdk.QuerySubscriptionResponse, error) {
	response, err := c.WithRawResponse.ListSubscriptions(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Returns a list of subscriptions for a single org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListSubscriptionsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListSubscriptionsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QuerySubscriptionResponse, error) {
	response, err := c.WithRawResponse.ListSubscriptionsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of transactions for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
// By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include `transactionDate` filters.
// For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.
//
//	``` curl --request GET \
//	  --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&fromRecord=0&transactionDate(ge)=2024-04-01T00:00:00&transactionDate(le)=2024-04-09T23:59:59\
//	  --header 'requestToken: <api-key>'
//
//	  ```
func (c *Client) ListTransactions(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListTransactionsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseTransactions, error) {
	response, err := c.WithRawResponse.ListTransactions(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of transactions for an organization. Use filters to
// limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
//
// By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include `transactionDate` filters.
//
// For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.
//
// ```
//
//	curl --request GET \
//	  --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&fromRecord=0&transactionDate(ge)=2024-04-01T00:00:00&transactionDate(le)=2024-04-09T23:59:59\
//	  --header 'requestToken: <api-key>'
//
//	  ```
func (c *Client) ListTransactionsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListTransactionsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseTransactions, error) {
	response, err := c.WithRawResponse.ListTransactionsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of transfer details records for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListTransferDetails(
	ctx context.Context,
	entry sdk.Entry,
	// The numeric identifier for the transfer, assigned by Payabli.
	transferId int,
	request *sdk.ListTransfersPaypointRequest,
	opts ...option.RequestOption,
) (*sdk.QueryTransferDetailResponse, error) {
	response, err := c.WithRawResponse.ListTransferDetails(
		ctx,
		entry,
		transferId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of transfers for a paypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListTransfers(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListTransfersRequest,
	opts ...option.RequestOption,
) (*sdk.TransferQueryResponse, error) {
	response, err := c.WithRawResponse.ListTransfers(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of transfers for an org. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListTransfersOrg(
	ctx context.Context,
	request *sdk.ListTransfersRequestOrg,
	opts ...option.RequestOption,
) (*sdk.TransferQueryResponse, error) {
	response, err := c.WithRawResponse.ListTransfersOrg(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get list of users for an org. Use filters to limit results.
func (c *Client) ListUsersOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListUsersOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryUserResponse, error) {
	response, err := c.WithRawResponse.ListUsersOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Get list of users for a paypoint. Use filters to limit results.
func (c *Client) ListUsersPaypoint(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdk.ListUsersPaypointRequest,
	opts ...option.RequestOption,
) (*sdk.QueryUserResponse, error) {
	response, err := c.WithRawResponse.ListUsersPaypoint(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of vendors for an entrypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListVendors(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdk.ListVendorsRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseVendors, error) {
	response, err := c.WithRawResponse.ListVendors(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of vendors for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListVendorsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListVendorsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.QueryResponseVendors, error) {
	response, err := c.WithRawResponse.ListVendorsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of vcards (virtual credit cards) issued for an entrypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListVcards(
	ctx context.Context,
	entry sdk.Entry,
	request *sdk.ListVcardsRequest,
	opts ...option.RequestOption,
) (*sdk.VCardQueryResponse, error) {
	response, err := c.WithRawResponse.ListVcards(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of vcards (virtual credit cards) issued for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListVcardsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListVcardsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.VCardQueryResponse, error) {
	response, err := c.WithRawResponse.ListVcardsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
