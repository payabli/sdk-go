// Code generated by Fern. DO NOT EDIT.

package payabli

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/payabli/sdk-go/internal"
	io "io"
)

type ImportBillsRequest struct {
	File io.Reader `json:"-" url:"-"`
}

type ImportCustomerRequest struct {
	// Flag indicating to replace existing customer with a new record. Possible values: 0 (do not replace), 1 (replace). Default is 0
	ReplaceExisting *int      `json:"-" url:"replaceExisting,omitempty"`
	File            io.Reader `json:"-" url:"-"`
}

type ImportVendorRequest struct {
	File io.Reader `json:"-" url:"-"`
}

type PayabliApiResponseImport struct {
	IsSuccess      *IsSuccess      `json:"isSuccess,omitempty" url:"isSuccess,omitempty"`
	PageIdentifier *PageIdentifier `json:"pageIdentifier,omitempty" url:"pageIdentifier,omitempty"`
	ResponseCode   *Responsecode   `json:"responseCode,omitempty" url:"responseCode,omitempty"`
	// The response data containing the result of the import operation.
	ResponseData *PayabliApiResponseImportResponseData `json:"responseData,omitempty" url:"responseData,omitempty"`
	ResponseText ResponseText                          `json:"responseText" url:"responseText"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PayabliApiResponseImport) GetIsSuccess() *IsSuccess {
	if p == nil {
		return nil
	}
	return p.IsSuccess
}

func (p *PayabliApiResponseImport) GetPageIdentifier() *PageIdentifier {
	if p == nil {
		return nil
	}
	return p.PageIdentifier
}

func (p *PayabliApiResponseImport) GetResponseCode() *Responsecode {
	if p == nil {
		return nil
	}
	return p.ResponseCode
}

func (p *PayabliApiResponseImport) GetResponseData() *PayabliApiResponseImportResponseData {
	if p == nil {
		return nil
	}
	return p.ResponseData
}

func (p *PayabliApiResponseImport) GetResponseText() ResponseText {
	if p == nil {
		return ""
	}
	return p.ResponseText
}

func (p *PayabliApiResponseImport) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PayabliApiResponseImport) UnmarshalJSON(data []byte) error {
	type unmarshaler PayabliApiResponseImport
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PayabliApiResponseImport(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PayabliApiResponseImport) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

// The response data containing the result of the import operation.
type PayabliApiResponseImportResponseData struct {
	// The number of records successfully added.
	Added *int `json:"added,omitempty" url:"added,omitempty"`
	// List of errors, if any.
	Errors []string `json:"errors,omitempty" url:"errors,omitempty"`
	// The number of records that were rejected.
	Rejected *int `json:"rejected,omitempty" url:"rejected,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PayabliApiResponseImportResponseData) GetAdded() *int {
	if p == nil {
		return nil
	}
	return p.Added
}

func (p *PayabliApiResponseImportResponseData) GetErrors() []string {
	if p == nil {
		return nil
	}
	return p.Errors
}

func (p *PayabliApiResponseImportResponseData) GetRejected() *int {
	if p == nil {
		return nil
	}
	return p.Rejected
}

func (p *PayabliApiResponseImportResponseData) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PayabliApiResponseImportResponseData) UnmarshalJSON(data []byte) error {
	type unmarshaler PayabliApiResponseImportResponseData
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PayabliApiResponseImportResponseData(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PayabliApiResponseImportResponseData) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
