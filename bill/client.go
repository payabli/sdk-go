// Code generated by Fern. DO NOT EDIT.

package bill

import (
	context "context"
	sdk "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Creates a bill in an entrypoint.
func (c *Client) AddBill(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdk.AddBillRequest,
	opts ...option.RequestOption,
) (*sdk.BillResponse, error) {
	response, err := c.WithRawResponse.AddBill(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Delete a file attached to a bill.
func (c *Client) DeleteAttachedFromBill(
	ctx context.Context,
	// The filename in Payabli. Filename is `zipName` in response to a
	// request to `/api/Invoice/{idInvoice}`. Here, the filename is
	// `0_Bill.pdf`.
	//
	// ```json
	//   "DocumentsRef": {
	//     "zipfile": "inva_269.zip",
	//     "filelist": [
	//       {
	//         "originalName": "Bill.pdf",
	//         "zipName": "0_Bill.pdf",
	//         "descriptor": null
	//       }
	//     ]
	//   }
	//   ```
	filename string,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request *sdk.DeleteAttachedFromBillRequest,
	opts ...option.RequestOption,
) (*sdk.BillResponse, error) {
	response, err := c.WithRawResponse.DeleteAttachedFromBill(
		ctx,
		filename,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Deletes a bill by ID.
func (c *Client) DeleteBill(
	ctx context.Context,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	opts ...option.RequestOption,
) (*sdk.BillResponse, error) {
	response, err := c.WithRawResponse.DeleteBill(
		ctx,
		idBill,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates a bill by ID.
func (c *Client) EditBill(
	ctx context.Context,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request *sdk.BillOutData,
	opts ...option.RequestOption,
) (*sdk.EditBillResponse, error) {
	response, err := c.WithRawResponse.EditBill(
		ctx,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a file attached to a bill, either as a binary file or as a Base64-encoded string.
func (c *Client) GetAttachedFromBill(
	ctx context.Context,
	// The filename in Payabli. Filename is `zipName` in response to a request to `/api/Invoice/{idInvoice}`. Here, the filename is `0_Bill.pdf``.
	// "DocumentsRef": {
	//   "zipfile": "inva_269.zip",
	//   "filelist": [
	//     {
	//       "originalName": "Bill.pdf",
	//       "zipName": "0_Bill.pdf",
	//       "descriptor": null
	//     }
	//   ]
	// }
	filename string,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request *sdk.GetAttachedFromBillRequest,
	opts ...option.RequestOption,
) (*sdk.FileContent, error) {
	response, err := c.WithRawResponse.GetAttachedFromBill(
		ctx,
		filename,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a bill by ID from an entrypoint.
func (c *Client) GetBill(
	ctx context.Context,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	opts ...option.RequestOption,
) (*sdk.GetBillResponse, error) {
	response, err := c.WithRawResponse.GetBill(
		ctx,
		idBill,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of bills for an entrypoint. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBills(
	ctx context.Context,
	// The paypoint's entrypoint identifier. [Learn more](/api-reference/api-overview#entrypoint-vs-entry)
	entry string,
	request *sdk.ListBillsRequest,
	opts ...option.RequestOption,
) (*sdk.BillQueryResponse, error) {
	response, err := c.WithRawResponse.ListBills(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve a list of bills for an organization. Use filters to limit results. Include the `exportFormat` query parameter to return the results as a file instead of a JSON response.
func (c *Client) ListBillsOrg(
	ctx context.Context,
	// The numeric identifier for organization, assigned by Payabli.
	orgId int,
	request *sdk.ListBillsOrgRequest,
	opts ...option.RequestOption,
) (*sdk.BillQueryResponse, error) {
	response, err := c.WithRawResponse.ListBillsOrg(
		ctx,
		orgId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Modify the list of users the bill is sent to for approval.
func (c *Client) ModifyApprovalBill(
	ctx context.Context,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request []string,
	opts ...option.RequestOption,
) (*sdk.ModifyApprovalBillResponse, error) {
	response, err := c.WithRawResponse.ModifyApprovalBill(
		ctx,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Send a bill to a user or list of users to approve.
func (c *Client) SendToApprovalBill(
	ctx context.Context,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request *sdk.SendToApprovalBillRequest,
	opts ...option.RequestOption,
) (*sdk.BillResponse, error) {
	response, err := c.WithRawResponse.SendToApprovalBill(
		ctx,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Approve or disapprove a bill by ID.
func (c *Client) SetApprovedBill(
	ctx context.Context,
	// String representing the approved status. Accepted values: 'true' or 'false'.
	approved string,
	// Payabli ID for the bill. Get this ID by querying `/api/Query/bills/` for the entrypoint or the organization.
	idBill int,
	request *sdk.SetApprovedBillRequest,
	opts ...option.RequestOption,
) (*sdk.SetApprovedBillResponse, error) {
	response, err := c.WithRawResponse.SetApprovedBill(
		ctx,
		approved,
		idBill,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
