// Code generated by Fern. DO NOT EDIT.

package vendor_

import (
	context "context"
	sdkgo "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Creates a vendor in an entrypoint.
func (c *Client) AddVendor(
	ctx context.Context,
	// Entrypoint identifier.
	entry string,
	request *sdkgo.VendorData,
	opts ...option.RequestOption,
) (*sdkgo.PayabliApiResponseVendors, error) {
	response, err := c.WithRawResponse.AddVendor(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Delete a vendor.
func (c *Client) DeleteVendor(
	ctx context.Context,
	// Vendor ID.
	idVendor int,
	opts ...option.RequestOption,
) (*sdkgo.PayabliApiResponseVendors, error) {
	response, err := c.WithRawResponse.DeleteVendor(
		ctx,
		idVendor,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates a vendor's information. Send only the fields you need to update.
func (c *Client) EditVendor(
	ctx context.Context,
	// Vendor ID.
	idVendor int,
	request *sdkgo.VendorData,
	opts ...option.RequestOption,
) (*sdkgo.PayabliApiResponseVendors, error) {
	response, err := c.WithRawResponse.EditVendor(
		ctx,
		idVendor,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a vendor's details.
func (c *Client) GetVendor(
	ctx context.Context,
	// Vendor ID.
	idVendor int,
	opts ...option.RequestOption,
) (*sdkgo.VendorQueryRecord, error) {
	response, err := c.WithRawResponse.GetVendor(
		ctx,
		idVendor,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
