// Code generated by Fern. DO NOT EDIT.

package statistic

import (
	context "context"
	sdkgo "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// Retrieves the basic statistics for an organization or a paypoint, for a given time period, grouped by a particular frequency.
func (c *Client) BasicStats(
	ctx context.Context,
	// Identifier in Payabli for the entity.
	entryId int64,
	// Frequency to group series. Allowed values:
	//
	// - `m` - monthly
	// - `w` - weekly
	// - `d` - daily
	// - `h` - hourly
	//
	// For example, `w` groups the results by week.
	freq string,
	// The entry level for the request:
	//   - 0 for Organization
	//   - 2 for Paypoint
	level int,
	// Mode for the request. Allowed values:
	//
	// - `custom` - Allows you to set a custom date range
	// - `ytd` - Year To Date
	// - `mtd` - Month To Date
	// - `wtd` - Week To Date
	// - `today` - All current day
	// - `m12` - Last 12 months
	// - `d30` - Last 30 days
	// - `h24` - Last 24 hours
	// - `lasty` - Last Year
	// - `lastm` - Last Month
	// - `lastw` - Last Week
	// - `yesterday` - Last Day
	//
	mode string,
	request *sdkgo.BasicStatsRequest,
	opts ...option.RequestOption,
) ([]*sdkgo.StatBasicQueryRecord, error) {
	response, err := c.WithRawResponse.BasicStats(
		ctx,
		entryId,
		freq,
		level,
		mode,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves the basic statistics for a customer for a specific time period, grouped by a selected frequency.
func (c *Client) CustomerBasicStats(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	// Frequency to group series. Allowed values:
	//
	// - `m` - monthly
	// - `w` - weekly
	// - `d` - daily
	// - `h` - hourly
	//
	// For example, `w` groups the results by week.
	freq string,
	// Mode for request. Allowed values:
	//
	// - `ytd` - Year To Date
	// - `mtd` - Month To Date
	// - `wtd` - Week To Date
	// - `today` - All current day
	// - `m12` - Last 12 months
	// - `d30` - Last 30 days
	// - `h24` - Last 24 hours
	// - `lasty` - Last Year
	// - `lastm` - Last Month
	// - `lastw` - Last Week
	// - `yesterday` - Last Day
	mode string,
	request *sdkgo.CustomerBasicStatsRequest,
	opts ...option.RequestOption,
) ([]*sdkgo.SubscriptionStatsQueryRecord, error) {
	response, err := c.WithRawResponse.CustomerBasicStats(
		ctx,
		customerId,
		freq,
		mode,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves the subscription statistics for a given interval for a paypoint or organization.
func (c *Client) SubStats(
	ctx context.Context,
	// Identifier in Payabli for the entity.
	entryId int64,
	// Interval to get the data. Allowed values:
	//
	// - `all` - all intervals
	// - `30` - 1-30 days
	// - `60` - 31-60 days
	// - `90` - 61-90 days
	// - `plus` - +90 days
	interval string,
	// The entry level for the request:
	//   - 0 for Organization
	//   - 2 for Paypoint
	level int,
	request *sdkgo.SubStatsRequest,
	opts ...option.RequestOption,
) ([]*sdkgo.StatBasicQueryRecord, error) {
	response, err := c.WithRawResponse.SubStats(
		ctx,
		entryId,
		interval,
		level,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieve the basic statistics about a vendor for a given time period, grouped by frequency.
func (c *Client) VendorBasicStats(
	ctx context.Context,
	// Frequency to group series. Allowed values:
	//
	// - `m` - monthly
	// - `w` - weekly
	// - `d` - daily
	// - `h` - hourly
	//
	// For example, `w` groups the results by week.
	freq string,
	// Vendor ID.
	idVendor int,
	// Mode for request. Allowed values:
	//
	// - `ytd` - Year To Date
	// - `mtd` - Month To Date
	// - `wtd` - Week To Date
	// - `today` - All current day
	// - `m12` - Last 12 months
	// - `d30` - Last 30 days
	// - `h24` - Last 24 hours
	// - `lasty` - Last Year
	// - `lastm` - Last Month
	// - `lastw` - Last Week
	// - `yesterday` - Last Day
	mode string,
	request *sdkgo.VendorBasicStatsRequest,
	opts ...option.RequestOption,
) ([]*sdkgo.StatisticsVendorQueryRecord, error) {
	response, err := c.WithRawResponse.VendorBasicStats(
		ctx,
		freq,
		idVendor,
		mode,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
