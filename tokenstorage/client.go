// Code generated by Fern. DO NOT EDIT.

package tokenstorage

import (
	context "context"
	sdk "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
	http "net/http"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Saves a payment method for reuse. This call exchanges sensitive payment information for a token that can be used to process future transactions. The `ReferenceId` value in the response is the `storedMethodId` to use with transactions.
func (c *Client) AddMethod(
	ctx context.Context,
	request *sdk.AddMethodRequest,
	opts ...option.RequestOption,
) (*sdk.AddMethodResponse, error) {
	response, err := c.WithRawResponse.AddMethod(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves details for a saved payment method.
func (c *Client) GetMethod(
	ctx context.Context,
	// The saved payment method ID.
	methodId string,
	request *sdk.GetMethodRequest,
	opts ...option.RequestOption,
) (*sdk.GetMethodResponse, error) {
	response, err := c.WithRawResponse.GetMethod(
		ctx,
		methodId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Deletes a saved payment method.
func (c *Client) RemoveMethod(
	ctx context.Context,
	// The saved payment method ID.
	methodId string,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymethodDelete, error) {
	response, err := c.WithRawResponse.RemoveMethod(
		ctx,
		methodId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates a saved payment method.
func (c *Client) UpdateMethod(
	ctx context.Context,
	// The saved payment method ID.
	methodId string,
	request *sdk.UpdateMethodRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymethodDelete, error) {
	response, err := c.WithRawResponse.UpdateMethod(
		ctx,
		methodId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
