// Code generated by Fern. DO NOT EDIT.

package customer

import (
	context "context"
	sdk "github.com/payabli/sdk-go"
	core "github.com/payabli/sdk-go/core"
	internal "github.com/payabli/sdk-go/internal"
	option "github.com/payabli/sdk-go/option"
	http "net/http"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Creates a customer in an entrypoint. An identifier is required to create customer records. Change your identifier settings in Settings > Custom Fields in PartnerHub.
// If you don't include an identifier, the record is rejected.
func (c *Client) AddCustomer(
	ctx context.Context,
	entry sdk.Entrypointfield,
	request *sdk.AddCustomerRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponseCustomerQuery, error) {
	response, err := c.WithRawResponse.AddCustomer(
		ctx,
		entry,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Delete a customer record.
func (c *Client) DeleteCustomer(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.DeleteCustomer(
		ctx,
		customerId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a customer's record and details.
func (c *Client) GetCustomer(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	opts ...option.RequestOption,
) (*sdk.CustomerQueryRecords, error) {
	response, err := c.WithRawResponse.GetCustomer(
		ctx,
		customerId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Links a customer to a transaction by ID.
func (c *Client) LinkCustomerTransaction(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	// ReferenceId for the transaction (PaymentId).
	transId string,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.LinkCustomerTransaction(
		ctx,
		customerId,
		transId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Sends the consent opt-in email to the customer email address in the customer record.
func (c *Client) RequestConsent(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.RequestConsent(
		ctx,
		customerId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Update a customer record. Include only the fields you want to change.
func (c *Client) UpdateCustomer(
	ctx context.Context,
	// Payabli-generated customer ID. Maps to "Customer ID" column in PartnerHub.
	customerId int,
	request *sdk.CustomerData,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponse00Responsedatanonobject, error) {
	response, err := c.WithRawResponse.UpdateCustomer(
		ctx,
		customerId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
