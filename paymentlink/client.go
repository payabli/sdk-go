// Code generated by Fern. DO NOT EDIT.

package paymentlink

import (
	context "context"
	http "net/http"
	sdk "sdk"
	core "sdk/core"
	internal "sdk/internal"
	option "sdk/option"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

// Generates a payment link for an invoice from the invoice ID.
func (c *Client) AddPayLinkFromInvoice(
	ctx context.Context,
	// Invoice ID
	idInvoice int,
	request *sdk.PayLinkData,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.AddPayLinkFromInvoice(
		ctx,
		idInvoice,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Deletes a payment link by ID.
func (c *Client) DeletePayLinkFromId(
	ctx context.Context,
	// ID for the payment link.
	payLinkId string,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.DeletePayLinkFromId(
		ctx,
		payLinkId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Retrieves a payment link by ID.
func (c *Client) GetPayLinkFromId(
	ctx context.Context,
	// ID for payment link
	paylinkId string,
	opts ...option.RequestOption,
) (*sdk.GetPayLinkFromIdResponse, error) {
	response, err := c.WithRawResponse.GetPayLinkFromId(
		ctx,
		paylinkId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Send a payment link to the specified email addresses or phone numbers.
func (c *Client) PushPayLinkFromId(
	ctx context.Context,
	// ID for the payment link.
	payLinkId string,
	request *sdk.PushPayLinkRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.PushPayLinkFromId(
		ctx,
		payLinkId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Refresh a payment link's content after an update.
func (c *Client) RefreshPayLinkFromId(
	ctx context.Context,
	// ID for the payment link.
	payLinkId string,
	request *sdk.RefreshPayLinkFromIdRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.RefreshPayLinkFromId(
		ctx,
		payLinkId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Sends a payment link to the specified email addresses.
func (c *Client) SendPayLinkFromId(
	ctx context.Context,
	// ID for the payment link.
	payLinkId string,
	request *sdk.SendPayLinkFromIdRequest,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.SendPayLinkFromId(
		ctx,
		payLinkId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

// Updates a payment link's details.
func (c *Client) UpdatePayLinkFromId(
	ctx context.Context,
	// ID for the payment link.
	payLinkId string,
	request *sdk.PayLinkUpdateData,
	opts ...option.RequestOption,
) (*sdk.PayabliApiResponsePaymentLinks, error) {
	response, err := c.WithRawResponse.UpdatePayLinkFromId(
		ctx,
		payLinkId,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
