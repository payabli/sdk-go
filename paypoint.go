// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/payabli/sdk-go/internal"
)

type GetEntryConfigRequest struct {
	Entrypages *string `json:"-" url:"entrypages,omitempty"`
}

type GetBasicEntryByIdResponse struct {
	IsSuccess      *IsSuccess           `json:"isSuccess,omitempty" url:"isSuccess,omitempty"`
	PageIdentifier *PageIdentifier      `json:"pageIdentifier,omitempty" url:"pageIdentifier,omitempty"`
	ResponseCode   *Responsecode        `json:"responseCode,omitempty" url:"responseCode,omitempty"`
	ResponseData   *PaypointEntryConfig `json:"responseData,omitempty" url:"responseData,omitempty"`
	ResponseText   *ResponseText        `json:"responseText,omitempty" url:"responseText,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetBasicEntryByIdResponse) GetIsSuccess() *IsSuccess {
	if g == nil {
		return nil
	}
	return g.IsSuccess
}

func (g *GetBasicEntryByIdResponse) GetPageIdentifier() *PageIdentifier {
	if g == nil {
		return nil
	}
	return g.PageIdentifier
}

func (g *GetBasicEntryByIdResponse) GetResponseCode() *Responsecode {
	if g == nil {
		return nil
	}
	return g.ResponseCode
}

func (g *GetBasicEntryByIdResponse) GetResponseData() *PaypointEntryConfig {
	if g == nil {
		return nil
	}
	return g.ResponseData
}

func (g *GetBasicEntryByIdResponse) GetResponseText() *ResponseText {
	if g == nil {
		return nil
	}
	return g.ResponseText
}

func (g *GetBasicEntryByIdResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetBasicEntryByIdResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetBasicEntryByIdResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetBasicEntryByIdResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetBasicEntryByIdResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetBasicEntryResponse struct {
	IsSuccess      *IsSuccess           `json:"isSuccess,omitempty" url:"isSuccess,omitempty"`
	PageIdentifier *PageIdentifier      `json:"pageIdentifier,omitempty" url:"pageIdentifier,omitempty"`
	ResponseCode   *Responsecode        `json:"responseCode,omitempty" url:"responseCode,omitempty"`
	ResponseData   *PaypointEntryConfig `json:"responseData,omitempty" url:"responseData,omitempty"`
	ResponseText   *ResponseText        `json:"responseText,omitempty" url:"responseText,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetBasicEntryResponse) GetIsSuccess() *IsSuccess {
	if g == nil {
		return nil
	}
	return g.IsSuccess
}

func (g *GetBasicEntryResponse) GetPageIdentifier() *PageIdentifier {
	if g == nil {
		return nil
	}
	return g.PageIdentifier
}

func (g *GetBasicEntryResponse) GetResponseCode() *Responsecode {
	if g == nil {
		return nil
	}
	return g.ResponseCode
}

func (g *GetBasicEntryResponse) GetResponseData() *PaypointEntryConfig {
	if g == nil {
		return nil
	}
	return g.ResponseData
}

func (g *GetBasicEntryResponse) GetResponseText() *ResponseText {
	if g == nil {
		return nil
	}
	return g.ResponseText
}

func (g *GetBasicEntryResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetBasicEntryResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetBasicEntryResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetBasicEntryResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetBasicEntryResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GetEntryConfigResponse struct {
	IsSuccess      *IsSuccess           `json:"isSuccess,omitempty" url:"isSuccess,omitempty"`
	PageIdentifier *PageIdentifier      `json:"pageIdentifier,omitempty" url:"pageIdentifier,omitempty"`
	ResponseCode   *Responsecode        `json:"responseCode,omitempty" url:"responseCode,omitempty"`
	ResponseData   *PaypointEntryConfig `json:"responseData,omitempty" url:"responseData,omitempty"`
	ResponseText   *ResponseText        `json:"responseText,omitempty" url:"responseText,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetEntryConfigResponse) GetIsSuccess() *IsSuccess {
	if g == nil {
		return nil
	}
	return g.IsSuccess
}

func (g *GetEntryConfigResponse) GetPageIdentifier() *PageIdentifier {
	if g == nil {
		return nil
	}
	return g.PageIdentifier
}

func (g *GetEntryConfigResponse) GetResponseCode() *Responsecode {
	if g == nil {
		return nil
	}
	return g.ResponseCode
}

func (g *GetEntryConfigResponse) GetResponseData() *PaypointEntryConfig {
	if g == nil {
		return nil
	}
	return g.ResponseData
}

func (g *GetEntryConfigResponse) GetResponseText() *ResponseText {
	if g == nil {
		return nil
	}
	return g.ResponseText
}

func (g *GetEntryConfigResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetEntryConfigResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetEntryConfigResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetEntryConfigResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetEntryConfigResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type MigratePaypointResponse struct {
	IsSuccess    *IsSuccess    `json:"isSuccess,omitempty" url:"isSuccess,omitempty"`
	ResponseCode *Responsecode `json:"responseCode,omitempty" url:"responseCode,omitempty"`
	ResponseText *ResponseText `json:"responseText,omitempty" url:"responseText,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (m *MigratePaypointResponse) GetIsSuccess() *IsSuccess {
	if m == nil {
		return nil
	}
	return m.IsSuccess
}

func (m *MigratePaypointResponse) GetResponseCode() *Responsecode {
	if m == nil {
		return nil
	}
	return m.ResponseCode
}

func (m *MigratePaypointResponse) GetResponseText() *ResponseText {
	if m == nil {
		return nil
	}
	return m.ResponseText
}

func (m *MigratePaypointResponse) GetExtraProperties() map[string]interface{} {
	return m.extraProperties
}

func (m *MigratePaypointResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler MigratePaypointResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*m = MigratePaypointResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *m)
	if err != nil {
		return err
	}
	m.extraProperties = extraProperties
	m.rawJSON = json.RawMessage(data)
	return nil
}

func (m *MigratePaypointResponse) String() string {
	if len(m.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(m.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(m); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", m)
}

type NotificationRequest struct {
	// Complete HTTP URL receiving the notification
	NotificationUrl string `json:"notificationUrl" url:"notificationUrl"`
	// A dictionary of key-value pairs to be inserted in the header when the notification request is submitted
	WebHeaderParameters []*WebHeaderParameter `json:"webHeaderParameters,omitempty" url:"webHeaderParameters,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (n *NotificationRequest) GetNotificationUrl() string {
	if n == nil {
		return ""
	}
	return n.NotificationUrl
}

func (n *NotificationRequest) GetWebHeaderParameters() []*WebHeaderParameter {
	if n == nil {
		return nil
	}
	return n.WebHeaderParameters
}

func (n *NotificationRequest) GetExtraProperties() map[string]interface{} {
	return n.extraProperties
}

func (n *NotificationRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler NotificationRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NotificationRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *n)
	if err != nil {
		return err
	}
	n.extraProperties = extraProperties
	n.rawJSON = json.RawMessage(data)
	return nil
}

func (n *NotificationRequest) String() string {
	if len(n.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(n.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type PaypointMoveRequest struct {
	EntryPoint Entrypointfield `json:"entryPoint" url:"entryPoint"`
	// The ID for the paypoint's new parent organization.
	NewParentOrganizationId int `json:"newParentOrganizationId" url:"newParentOrganizationId"`
	// Optional notification request object for a webhook
	NotificationRequest *NotificationRequest `json:"notificationRequest,omitempty" url:"notificationRequest,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (p *PaypointMoveRequest) GetEntryPoint() Entrypointfield {
	if p == nil {
		return ""
	}
	return p.EntryPoint
}

func (p *PaypointMoveRequest) GetNewParentOrganizationId() int {
	if p == nil {
		return 0
	}
	return p.NewParentOrganizationId
}

func (p *PaypointMoveRequest) GetNotificationRequest() *NotificationRequest {
	if p == nil {
		return nil
	}
	return p.NotificationRequest
}

func (p *PaypointMoveRequest) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaypointMoveRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler PaypointMoveRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaypointMoveRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties
	p.rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaypointMoveRequest) String() string {
	if len(p.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(p.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type WebHeaderParameter struct {
	Key   string `json:"key" url:"key"`
	Value string `json:"value" url:"value"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (w *WebHeaderParameter) GetKey() string {
	if w == nil {
		return ""
	}
	return w.Key
}

func (w *WebHeaderParameter) GetValue() string {
	if w == nil {
		return ""
	}
	return w.Value
}

func (w *WebHeaderParameter) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WebHeaderParameter) UnmarshalJSON(data []byte) error {
	type unmarshaler WebHeaderParameter
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WebHeaderParameter(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties
	w.rawJSON = json.RawMessage(data)
	return nil
}

func (w *WebHeaderParameter) String() string {
	if len(w.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(w.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}
